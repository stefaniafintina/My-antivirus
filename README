Copyright Fîntînă Ștefania-Maria 314CAa 2022-2023

	Algoritmul proiectat citeste, pentru primul taks, din fisierul "urls.in" mai multe url-uri si verifica daca acestea sunt malitioase sau nu. M-am folosit de euristicele sugerate in enuntul temei si de fisierul ajutator "domains_database". Daca in url-ul curent se gasesc parti ce ar putea determina gasirea unui url malitios marcam acest lucru prin intermediul variabilei verif ce va fi initializata cu 1, apoi verific extensia fiecarui url si initializez verif cu 1 daca extensia este malitioasa. Determin domeniul url-ul atunci cand ajung la primul caracter '/'. Contorizez numarul de cifre din domeniu, iar daca acesta este mai mare de 1.0*nr_digits(domain) >=0.1* len(domain) (eu am pus 2.0 dupa mai multe incercari, deoarece aveam o acuratete mai buna cu 2.0), url-ul e malitios.La sfarsit afisez 0 sau 1, fapt ce indica daca url-ul e malitios sau nu.
	Pentru task-ul 2, citesc din fisierul "traffic.in" datele de intrare de tip CSV. De asemenea, am folosit euristicile sugerate in enunt. Astfel, am verificat daca flow_direction este mai mare decat durata normala, pentru a realiza asta am impartit string-ul in token-uri separate prin ',', iar daca token-ul curent este pe pozitia a 5-a verific daca este diferit de 0, fiind diferit indica un timp diferit de cel normal. Apoi verific daca timpul ce este reprezentat de la pozitia 7 pana la 14, inclusiv, este diferit de cel normal. Verific daca token-ul este pe pozitia a 17-a din string-ul initial, adica pe pozitia flow_pkts_payload.avg, iar daca primul caracter din token este diferit de 0 traficul nu este normal si semnalam asta prin actualizarea valorii ok cu 1.
	Daca timpul este in parametrii normali si traficul este normal se va afisa 1, altfel se va afisa 0.
